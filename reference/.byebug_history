quit 
source_options.table_name
source_options
n
through_options.model_class
through_options
self.class.assoc_options
self.class
through_options
c
query
c
source_options
through_options
c
exit
source_name
through_name
self.class.assoc_options
through_options
self
self.name
self.ame
through_options.model_class.assoc_options
self
through_options.model_class.assoc_options
through_options.model_class.assoc_options[source_options]
through_options.model_class
Human
House
through_options
source_options
c
source_options
through_options
c
name
c
assoc_options
c
assoc_options
options
c
quit
name
options
self.class
self
quit
options
self_class_name
name
c
display name
display self_class_name
c
quit
options
n
options
c
options
n
options
quit
options
c
self.class.name
self.class
options
options.self_class_name
self.class.name.to_s.to_snakecase
self.class.name.to_s
self.class.name
self
foreign_key
options
Human.all
options.model_class
options
c
options
foreign_key
primary_key
quit
options
options.model_class.all.map(&:owner_id)
options.model_class.all
options.model_class.where(id: 5)
options.model_class.where(id: 4)
options.model_class.where(id: 3)
options.model_class.where(id: 1)
options.model_class.where(id: 2)
options.model_class.where(id: 3)
options.model_class.where(id: primary_key)
options
c
n
options.model_class.where(id: primary_key)
options.model_class.where(id: primary_key).first
n
options
c
quit
options.model_class.send(options.primary_key)
options.model_class.send(options.foreign_key)
options.model_class
model_class
model_class.send(options.foreign_key)
send(options.foreign_key)
self.class.where(id: 3)
self
send(options.primary_key)
primary_key
c
quit
c
quit
c
send(options.foreign_key)
send(options.foreign_key
send(options.primary_key)
primary_key
options
options.primary_key
c
quit
self
options.model_class
options
quit
c
options
quit
c
options
quit
c
n
value
setter_name
option
quit
options
c
default_options
option
n
default_options
options
n
name
self_class_name
quit
options
quit
exit
options
primary_key
c
n
quit
primary_key
foreign_key
quit
options
c
n
quit
options
name
quit
c
n
options.primary_key
n
options.class_name
n
options.foreign_key
options
n
default_options
c
@foreign_key
n
setter_name
quit
setter_name
quit
name
bane
quit
value
option
quit
class_name.constantize.methods
class_name.constantize
class_name
c
send("@#{option}")
c
n
options
c
display options
c
options
quit
DBConnection.execute(query, params.values)
DBConnect.execute(query, params.values)
c
params
where_str
c
params
where_str
c
where_str
c
n
table_name
where_str
c
set_str
c
set_str
attribute_values
c
set_str
attribute_values
c
attribute_values
c
attribute_values
quit
attribute_values
quit
attribute_values
quit
attributes
attribute_values
set_str
quit
exit
c
self.class.columns
c
n
c
self.methods
display params
nn
